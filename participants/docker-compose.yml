---

x-common: &common
  ulimits:
    nofile:
      soft: 1048576
      hard: 1048576
  sysctls:
    - net.core.somaxconn=4096
    - net.ipv4.tcp_max_syn_backlog=2048
  ports:
    - "8000:8000"

services:
  go-pgx:
    <<: *common
    build:
      context: go/stdlib
    environment:
      - DATABASE_URL=${DATABASE_URL}

  uvicorn-asyncpg:
    <<: *common
    build:
      context: python/uvicorn
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WEB_CONCURRENCY=4
      - LOOP=uvloop
      - HTTP=httptools
      - JSON_LIBRARY=orjson

  uvicorn-asyncpg-h11:
    <<: *common
    build:
      context: python/uvicorn
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WEB_CONCURRENCY=4
      - LOOP=uvloop
      - HTTP=h11
      - JSON_LIBRARY=orjson

  uvicorn-asyncpg-one-worker:
    <<: *common
    build:
      context: python/uvicorn
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WEB_CONCURRENCY=1
      - LOOP=uvloop
      - HTTP=httptools
      - JSON_LIBRARY=orjson

  uvicorn-asyncpg-asyncio:
    <<: *common
    build:
      context: python/uvicorn
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WEB_CONCURRENCY=4
      - LOOP=asyncio
      - HTTP=httptools
      - JSON_LIBRARY=orjson

  uvicorn-asyncpg-std:
    <<: *common
    build:
      context: python/uvicorn
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WEB_CONCURRENCY=4
      - LOOP=asyncio
      - HTTP=h11
      - JSON_LIBRARY=stdlib

  uvicorn-asyncpg-std-one-worker:
    <<: *common
    build:
      context: python/uvicorn
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WEB_CONCURRENCY=1
      - LOOP=asyncio
      - HTTP=h11
      - JSON_LIBRARY=stdlib

  uvicorn-psycopg-pypy:
    <<: *common
    build:
      context: python/uvicorn
      dockerfile: Dockerfile.pypy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WEB_CONCURRENCY=4

  granian-asgi:
    <<: *common
    build:
      context: python/granian
      dockerfile: Dockerfile.asgi
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WEB_CONCURRENCY=4

  granian-rsgi:
    <<: *common
    build:
      context: python/granian
      dockerfile: Dockerfile.rsgi
    environment:
      - DATABASE_URL=${DATABASE_URL}
      # workers=cpu_count() * 0.75 - leave 25% cpu to the Rust runtime
      - WEB_CONCURRENCY=3

  fastapi:
    <<: *common
    build:
      context: python/fastapi
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WEB_CONCURRENCY=4

  fastapi-sync-endpoints:
    <<: *common
    build:
      context: python/fastapi
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SYNC_ENDPOINTS=1
      - WEB_CONCURRENCY=4

  fastapi-sync-dependency:
    <<: *common
    build:
      context: python/fastapi
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SYNC_DEPENDENCY=1
      - WEB_CONCURRENCY=4

  django-gunicorn-sync:
    <<: *common
    build:
      context: python/django
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - WORKER_CLASS=sync
      - WEB_CONCURRENCY=4

  django-gunicorn-gthread:
    <<: *common
    build:
      context: python/django
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - WORKER_CLASS=gthread
      - THREADS=4
      - WEB_CONCURRENCY=4

  django-gunicorn-gevent:
    <<: *common
    build:
      context: python/django
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - WORKER_CLASS=gevent
      - WEB_CONCURRENCY=4

  django-uvicorn:
    <<: *common
    build:
      context: python/django
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - ASYNC_MODE=1
      - WEB_CONCURRENCY=4

  robyn:
    <<: *common
    build:
      context: python/robyn
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WEB_CONCURRENCY=4

  socketify-asyncpg-async:
    <<: *common
    build:
      context: python/socketify
    platform: linux/amd64
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SQL_DRIVER=asyncpg
      - WEB_CONCURRENCY=4

  socketify-psycopg-sync:
    <<: *common
    build:
      context: python/socketify
      dockerfile: Dockerfile.psycopg
    platform: linux/amd64
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SYNC_ENDPOINTS=1
      - SQL_DRIVER=psycopg_sync
      - WEB_CONCURRENCY=4

  socketify-psycopg-async-pypy:
    <<: *common
    build:
      context: python/socketify
      dockerfile: Dockerfile.psycopg_pypy
    platform: linux/amd64
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SQL_DRIVER=psycopg_async
      - WEB_CONCURRENCY=4

  socketify-psycopg-sync-pypy:
    <<: *common
    build:
      context: python/socketify
      dockerfile: Dockerfile.psycopg_pypy
    platform: linux/amd64
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SYNC_ENDPOINTS=1
      - SQL_DRIVER=psycopg_sync
      - WEB_CONCURRENCY=4

  falcon-gunicorn-sync:
    <<: *common
    build:
      context: python/falcon
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WORKER_CLASS=sync
      - WEB_CONCURRENCY=4

  falcon-gunicorn-gthread:
    <<: *common
    build:
      context: python/falcon
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WORKER_CLASS=gthread
      - WEB_CONCURRENCY=4
      - THREADS=4

  falcon-gunicorn-gevent:
    <<: *common
    build:
      context: python/falcon
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WORKER_CLASS=gevent
      - WEB_CONCURRENCY=4

  falcon-gunicorn-sync-pypy:
    <<: *common
    build:
      context: python/falcon
      dockerfile: Dockerfile.pypy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WORKER_CLASS=sync
      - WEB_CONCURRENCY=4

  falcon-gunicorn-gthread-pypy:
    <<: *common
    build:
      context: python/falcon
      dockerfile: Dockerfile.pypy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WORKER_CLASS=gthread
      - WEB_CONCURRENCY=4
      - THREADS=4

  falcon-gunicorn-gevent-pypy:
    <<: *common
    build:
      context: python/falcon
      dockerfile: Dockerfile.pypy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WORKER_CLASS=gevent
      - WEB_CONCURRENCY=4

  laravel:
    <<: *common
    build:
      context: php/laravel
      args:
        - POSTGRES_HOST=${POSTGRES_HOST}

  laravel-octane-frankenphp:
    <<: *common
    build:
      context: php/laravel
      dockerfile: Dockerfile.octane-frankenphp
      args:
        - POSTGRES_HOST=${POSTGRES_HOST}

networks:
  default:
    name: webbench
    external: true
